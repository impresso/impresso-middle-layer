
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */


/**
 * Additional fields specific to newspaper article content items in the Impresso project
 */
export interface ArticleContentItemFields {
  /**
   * Array of page numbers where the article appears
   */
  page_nb_is?: number[];
  /**
   * Total number of pages the article spans
   */
  nb_pages_i?: number;
  /**
   * Whether the article appears on the front page
   */
  front_b?: boolean;
  /**
   * Array of page region coordinates in plain text format (x,y,width,height)
   */
  page_regions_plains?: string[];
  /**
   * Length of the article content in characters
   */
  content_length_i?: number;
  /**
   * Whether the article has reliable coordinate information
   */
  cc_b?: boolean;
  /**
   * Text reuse cluster identifier (for text reuse analysis)
   */
  cluster_id_s?: string;
  /**
   * Size of the text reuse cluster
   */
  cluster_size_l?: number;
  /**
   * Beginning character offset for text reuse passage
   */
  beg_offset_i?: number;
  /**
   * Ending character offset for text reuse passage
   */
  end_offset_i?: number;
  /**
   * Content item identifier (alternative ID format)
   */
  ci_id_s?: string;
  /**
   * Array of page identifiers where the article appears
   */
  page_id_ss?: string[];
  /**
   * Reading order position of the article on the page
   */
  reading_order_i?: number;
  /**
   * Plain text snippet of the article content
   */
  snippet_plain?: string;
  /**
   * Region coordinates in plain text format with page and coordinate information
   */
  rc_plains?: string[];
  /**
   * Line boundaries in plain text format
   */
  lb_plain?: string;
  /**
   * Paragraph boundaries in plain text format
   */
  pb_plain?: string;
  /**
   * Region boundaries in plain text format
   */
  rb_plain?: string;
  /**
   * OCR quality assessment score (0-1)
   */
  ocrqa_f?: number;
  /**
   * Named entity mentions with character offsets in JSON format
   */
  nem_offset_plain?: string;
  /**
   * Array of person mentions found in the text
   */
  pers_mentions?: string[];
  /**
   * Person mentions with confidence scores in format 'mention|score'
   */
  pers_mention_conf_dpfs?: string[];
  /**
   * Array of location mentions found in the text
   */
  loc_mentions?: string[];
  /**
   * Location mentions with confidence scores in format 'mention|score'
   */
  loc_mention_conf_dpfs?: string[];
  /**
   * Array of organization mentions found in the text
   */
  org_mentions?: string[];
  /**
   * Organization mentions with confidence scores in format 'mention|score'
   */
  org_mention_conf_dpfs?: string[];
  /**
   * Linked location entities with confidence scores in format 'entity_id|score'
   */
  loc_entities_dpfs?: string[];
  /**
   * Linked person entities with confidence scores in format 'entity_id|score'
   */
  pers_entities_dpfs?: string[];
  /**
   * 768-dimensional vector embeddings for the content
   */
  gte_multi_v768?: number[];
  /**
   * Segment items on the page.
   */
  pp_plain?: string;
}


/**
 * Schema for content items in the Impresso project, including articles, radio broadcasts, and other media content
 */
export interface ContentItem {
  /**
   * Unique identifier for the content item
   */
  id: string;
  /**
   * Journal or media source identifier
   */
  meta_journal_s: string;
  /**
   * Year of publication/broadcast
   */
  meta_year_i: number;
  /**
   * Month of publication/broadcast
   */
  meta_month_i: number;
  /**
   * Year-month in YYYY-MM format
   */
  meta_yearmonth_s?: string;
  /**
   * Day of publication/broadcast
   */
  meta_day_i: number;
  /**
   * Edition identifier
   */
  meta_ed_s?: string;
  /**
   * Full date and time in ISO 8601 format
   */
  meta_date_dt: string;
  /**
   * Issue identifier
   */
  meta_issue_id_s?: string;
  /**
   * Type of media source
   */
  source_type_s: "newspaper" | "radio_broadcast";
  /**
   * Country code or 'na' if not applicable
   */
  meta_country_code_s?: string;
  /**
   * Province code or 'na' if not applicable
   */
  meta_province_code_s?: string;
  /**
   * Publication periodicity or 'na' if not applicable
   */
  meta_periodicity_s?: string;
  /**
   * Topics metadata or 'na' if not applicable
   */
  meta_topics_s?: string;
  /**
   * Political orientation or 'na' if not applicable
   */
  meta_polorient_s?: string;
  /**
   * Partner ID or 'na' if not applicable
   */
  meta_partnerid_s?: string;
  /**
   * Document type (ci = content item, p = page)
   */
  doc_type_s: "ci" | "p";
  /**
   * Specific type of content item (uc = unknown)
   */
  item_type_s: "ar" | "radio_broadcast_episode" | "uc" | "ad" | "tb" | "ob" | "w" | "page";
  /**
   * OCR/OLR processing flag
   */
  olr_b?: boolean;
  /**
   * Original language code
   */
  lg_orig_s?: string;
  /**
   * Language code or 'no_lg' if no language detected
   */
  lg_s?: string;
  /**
   * Topic distributions with confidence scores in format 'topic_id|score'
   */
  topics_dpfs?: string[];
  /**
   * Data domain for rights management
   */
  rights_data_domain_s?: string;
  /**
   * Copyright information
   */
  rights_copyright_s?: string;
  /**
   * Permission level for exploration use in plain format
   */
  rights_perm_use_explore_plain?: string;
  /**
   * Permission level for getting text reuse data in plain format
   */
  rights_perm_use_get_tr_plain?: string;
  /**
   * Permission level for getting images in plain format
   */
  rights_perm_use_get_img_plain?: string;
  /**
   * Bitmap that controls accessibility to the 'Explore' action via the WebApp (browse). Encodes which user status or archive membership is sufficient to execute the EXPLORE action on this title.
   */
  rights_bm_explore_l?: number;
  /**
   * Bitmap that controls accessibility to the 'Get Transcript' action (export via .csv or download via API). Encodes which user status or archive membership is sufficient to execute the GET action on TRANSCRIPTS of this title.
   */
  rights_bm_get_tr_l?: number;
  /**
   * Bitmap that controls accessibility to the 'Get any part of a facsimile' action (export via .csv or download via API). Encodes which user status or archive membership is sufficient to execute the GET action on IMAGES or ANY PART OF THE FACSIMILE of this title.
   */
  rights_bm_get_img_l?: number;
}


/**
 * Image Solr document in Impresso v2
 */
export interface Image {
  id?: string;
  meta_journal_s?: string;
  meta_year_i?: number;
  meta_day_i?: number;
  meta_ed_s?: string;
  meta_issue_id_s?: string;
  meta_date_dt?: string;
  linked_ci_s?: string;
  reading_order_i?: number;
  caption_txt?: string[];
  item_type_s?: string;
  page_nb_is?: number[];
  coords_is?: number[];
  front_b?: boolean;
  iiif_url_s?: string;
  iiif_link_s?: string;
  cc_b?: boolean;
  rights_data_domain_s?: string;
  rights_copyright_s?: string;
  rights_perm_use_explore_plain?: string[];
  rights_perm_use_get_tr_plain?: string[];
  rights_perm_use_get_img_plain?: string[];
  rights_bm_explore_l?: number;
  rights_bm_get_tr_l?: number;
  rights_bm_get_img_l?: number;
  dinov2_emb_v1024?: number[];
  openclip_emb_v768?: number[];
  _version_?: number;
}


/**
 * Additional fields specific to radio broadcast content items in the Impresso project
 */
export interface RadioBroadcastContentItemFields {
  /**
   * Medium of the source (radio broadcasts use audio)
   */
  source_medium_s?: "audio";
  /**
   * Array of record identifiers for radio broadcast segments
   */
  record_id_ss?: string[];
  /**
   * Array of record numbers corresponding to radio broadcast segments
   */
  record_nb_is?: number[];
  /**
   * Total number of records/segments in the radio broadcast
   */
  nb_record_i?: number;
  /**
   * Start time of the radio broadcast in HH:MM:SS format
   */
  start_time_s?: string;
  /**
   * Duration of the radio broadcast in HH:MM:SS format
   */
  duration_s?: string;
  /**
   * Name of the radio channel that aired the broadcast
   */
  radio_channel_s?: string;
  /**
   * Name of the radio program or show
   */
  radio_program_s?: string;
}
